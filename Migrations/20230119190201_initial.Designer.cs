// <auto-generated />
using System;
using DatabaseHandler.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseHandler.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230119190201_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminDBHandler.Models.Dept_Level_Term.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"));

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeptId");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("AdminDBHandler.Models.Dept_Level_Term.Level_Term", b =>
                {
                    b.Property<int>("LevelTerm_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelTerm_id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelTerm_id");

                    b.ToTable("levelTerm");
                });

            modelBuilder.Entity("AdminDBHandler.Models.User.User_Types.Officials", b =>
                {
                    b.Property<int>("OfficialNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficialNo"));

                    b.Property<int>("IndividualId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("OfficialNo");

                    b.HasIndex("IndividualId");

                    b.HasIndex("RoleId");

                    b.ToTable("officials");
                });

            modelBuilder.Entity("AdminDBHandler.Models.User.User_Types.Students", b =>
                {
                    b.Property<int>("StudentNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentNo"));

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("IndividualId")
                        .HasColumnType("int");

                    b.Property<int>("LTId")
                        .HasColumnType("int");

                    b.HasKey("StudentNo");

                    b.HasIndex("DeptId");

                    b.HasIndex("IndividualId");

                    b.HasIndex("LTId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("AdminDBHandler.Models.User.User_Types.Teachers", b =>
                {
                    b.Property<int>("TeacherNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherNo"));

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndividualId")
                        .HasColumnType("int");

                    b.HasKey("TeacherNo");

                    b.HasIndex("DeptId");

                    b.HasIndex("IndividualId");

                    b.ToTable("teachers");
                });

            modelBuilder.Entity("AdminDBHandler.Models.User.Users", b =>
                {
                    b.Property<int>("IndividualID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndividualID"));

                    b.Property<string>("ConnectionListAndLastMessage_json")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IndividualID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DatabaseHandler.Models.Generated.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConnectedUsers_json")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastMessageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConnectionId");

                    b.ToTable("connections");
                });

            modelBuilder.Entity("DatabaseHandler.Models.Generated.Message", b =>
                {
                    b.Property<string>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message_json")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("connectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("SenderId");

                    b.HasIndex("connectionId");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("DatabaseHandler.Models_and_repositories.Role.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("AdminDBHandler.Models.User.User_Types.Officials", b =>
                {
                    b.HasOne("AdminDBHandler.Models.User.Users", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseHandler.Models_and_repositories.Role.Role", "role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");

                    b.Navigation("role");
                });

            modelBuilder.Entity("AdminDBHandler.Models.User.User_Types.Students", b =>
                {
                    b.HasOne("AdminDBHandler.Models.Dept_Level_Term.Department", "Dept")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDBHandler.Models.User.Users", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDBHandler.Models.Dept_Level_Term.Level_Term", "LT")
                        .WithMany()
                        .HasForeignKey("LTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dept");

                    b.Navigation("Individual");

                    b.Navigation("LT");
                });

            modelBuilder.Entity("AdminDBHandler.Models.User.User_Types.Teachers", b =>
                {
                    b.HasOne("AdminDBHandler.Models.Dept_Level_Term.Department", "Dept")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDBHandler.Models.User.Users", "Individual")
                        .WithMany()
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dept");

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("DatabaseHandler.Models.Generated.Message", b =>
                {
                    b.HasOne("AdminDBHandler.Models.User.Users", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseHandler.Models.Generated.Connection", "connection")
                        .WithMany()
                        .HasForeignKey("connectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");

                    b.Navigation("connection");
                });
#pragma warning restore 612, 618
        }
    }
}
